#!~/.config/admiral.d/env/bin python3

import i3ipc

# Create the Connection object that can be used to send commands and subscribe
# to events.
i3 = i3ipc.Connection()

# Define colors
coloractive = '%{U#d9671f}'
colorinactive = '%{F#839496}'
colorwarning = '%{U#6c71c4}'

# Define a callback to be called when you switch workspaces.
def on_workspace_focus(self, e):
    workspace_string = ' '
    workspaces = i3.get_workspaces()

    ws_nums = [int(n['num']) for n in workspaces]
    focused = [n['visible'] for n in workspaces].index(True)
    urg = [n for n, _ in enumerate(workspaces) if workspaces[n]['urgent'] == True]
    names = [''.join([i for i in n['name'] if not i.isdigit()]) for n in workspaces]

    for n in range(len(ws_nums)):
        if focused == n:
            workspace_string += coloractive + '%{+u}' + names[n] + '%{-u}%{U-}' + ' '
        elif n in urg:
            workspace_string += colorwarning + '%{+u}' + names[n] + '%{-u}%{U-}' + ' '
        else:
            workspace_string += colorinactive + names[n] + ' '

    workspace_string += ' '
    print(workspace_string.encode('utf-8')) #, flush=True)

workspace_string = ' '
workspaces = i3.get_workspaces()

ws_nums = [int(n['num']) for n in workspaces]
focused = [n['visible'] for n in workspaces].index(True)
urg = [n for n, _ in enumerate(workspaces) if workspaces[n]['urgent'] == True]
names = [''.join([i for i in n['name'] if not i.isdigit()]) for n in workspaces]

for n in range(len(ws_nums)):
    if focused == n:
        workspace_string += coloractive + '%{+u}' + names[n] + '%{-u }%{U-}' + ' '
    elif n in urg:
        workspace_string += colorwarning + '%{+u}' + names[n] + '%{-u}%{U-}' + ' '
    else:
        workspace_string += colorinactive + names[n] + ' '

workspace_string += ' '
print(workspace_string.encode('utf-8'))#, flush=True)

# Subscribe to events
i3.on('workspace', on_workspace_focus)

# Start the main loop and wait for events to come in.
i3.main()
